{"version":3,"sources":["components/Canvas/Canvas2d.js","hooks/useCanvas.js","components/Canvas/ResponsiveCanvas.js","components/Tooltip/Tooltip.js","components/DotBarChart/utils/computeIndexedNodes.js","components/DotBarChart/utils/computeLayout.js","components/DotBarChart/utils/drawDotBarFunction.js","components/DotBarChart/utils/drawLabelsFunction.js","components/DotBarChart/DotBarChart.js","containers/JobStatus/demoDataGenerator.js","containers/JobStatus/JobStatus.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js"],"names":["Canvas2d","_ref","click","_ref$drawFunction","drawFunction","_ref$height","height","_ref$width","width","_ref$canvasPixelRatio","canvasPixelRatio","mousedown","mousemove","mouseup","_ref$style","style","touchend","touchmove","touchstart","canvasRef","draw","ratio","arguments","length","undefined","useRef","useEffect","canvas","current","ctx","getContext","animationFrameId","requestAnimationFrame","clearRect","save","scale","restore","cancelAnimationFrame","useCanvas","sizeInPixels","concat","react_default","a","createElement","Object","objectSpread","ref","onTouchStart","onTouchMove","onTouchEnd","onMouseMove","onMouseDown","onMouseUp","onClick","ResponsiveCanvas","_ref$canvasStyle","canvasStyle","_ref$canvasDrawFuncti","canvasDrawFunction","eventCanvasDrawFunction","_ref$eventCanvasStyle","eventCanvasStyle","position","top","left","opacity","_ref$wrapperClassName","wrapperClassName","wrapperSizeRef","_ref$wrapperStyle","wrapperStyle","touchCanvas","touchStyles","pointerEvents","className","Tooltip","borderWidth","content","contentWidth","font","padding","bottom","borderStyle","borderColor","marginLeft","color","backgroundColor","border","borderRadius","zIndex","computeIndexedNodes","nodes","_ref$uniqueIdPropName","uniqueIdPropName","groupPropName","_ref$groupIndexPropNa","groupIndexPropName","groupKeys","groupCounts","Array","isArray","reduce","acc","key","defineProperty","colorToNode","nodeIdToColor","indexed","node","index","_objectSpread3","group","_node$uniqueIdPropNam","id","groupIndex","uniqueColor","computeLayout","_ref2","_ref2$bandPaddingInne","bandPaddingInner","_ref2$bandPaddingOute","bandPaddingOuter","_ref2$isHangingBar","isHangingBar","_ref2$groupIndexPropN","_ref2$margin","margin","right","nodeCount","_ref2$radiusToPadding","radiusToPaddingRatio","xScale","scaleBand","domain","range","paddingInner","paddingOuter","radiusWithPadding","bandwidth","maxNodesPerBar","areaPerSquare","Math","sqrt","optRadius","radius","diameter","outerSpace","step","nNodesPerRow","ceil","yRange","yScale","scaleLinear","reverse","radiusAccessor","xAccessor","xOff","floor","yAccessor","rowN","drawDotBarFunction","colorAccessor","_ref$strokeColorAcces","strokeColorAccessor","_ref$strokeWidth","strokeWidth","_ref$strokeLineJoin","strokeLineJoin","forEach","d","i","path2","Path2D","x","y","l","pre","circlePath","strokeStyle","lineWidth","lineJoin","stroke","fillStyle","fill","drawLabelsFunction","_ref$font","_ref$fontSecondary","fontSecondary","_ref$fontStrokeColor","fontStrokeColor","_ref$fontStrokeWidth","fontStrokeWidth","labels","_ref$numberOffset","numberOffset","counts","total","values","sum","count","textAlign","textBaseline","fillText","strokeText","percent","percentPrecise","toPrecision","round","progressLabel","stateReducer","state","action","type","payload","isRendering","Error","DotBarChart","_ref$bandPaddingInner","_ref$bandPaddingOuter","_ref$circleStrokeColo","circleStrokeColor","circleStrokeWidth","groupLabels","_ref$isHangingBar","labelColorAccessor","_ref$labelFont","labelFont","_ref$labelFontSeconda","labelFontSecondary","_ref$margin","_ref$radiusToPaddingR","_useResizeObserver","useResizeObserver","_useResizeObserver2","slicedToArray","sizeRef","_useReducer","useReducer","tooltipContent","tooltipContentWidth","tooltipOffset","_useReducer2","dispatch","_computeLayout","_computeIndexedNodes","dotBarDrawFunction","dotBarDraw","labelDraw","labelDrawFunction","Fragment","background","e","event","hiddenCtx","target","rgb","getImageData","nativeEvent","offsetX","offsetY","data","renderProps","omit","maxWidth","value","measureText","map","pageX","pageY","getDemoMetaDataAndNodes","asyncToGenerator","regenerator_default","mark","_callee","_ref$metadataCsv","metadataCsv","_ref$nNodes","nNodes","_ref$groupPropName","statusCSV","jobStatusMetaData","wrap","_context","prev","next","csvParse","sent","sort","b","sort_order","_ref3","unique_id","abrupt","groupMetadataArray","stop","_x","apply","this","getFakeProgress","numberToAdvance","random","indicesToAdvance","includes","findIndex","nextGroupIndex","randomErrorState","jobStateReducer","_action$payload","colorPropName","labelPropName","groupMetadata","meta","colorRange","colorScale","scaleOrdinal","has","JobStatus","_ref$colorPropName","_ref$labelPropName","nodesMetadataPromise","_ref$pollingInterval","pollingInterval","_fetchData","fetchData","callback","delay","savedCallback","setInterval","clearInterval","useInterval","JobStatusDemoWithNNodes","match","params","Number","bind","Boolean","window","location","hostname","ReactDOM","render","react_router_dom","react_router","path","exact","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee3bbb3a.chunk.js","sourcesContent":["import React from 'react';\nimport  useCanvas from '../../hooks/useCanvas';\n\nexport default function Canvas2d({\n  click,\n  drawFunction = () => {},\n  height = 500,\n  width = 500,\n  canvasPixelRatio = 2,\n  mousedown,\n  mousemove,\n  mouseup,\n  style = {},\n  touchend,\n  touchmove,\n  touchstart,\n}) {\n  const canvasRef = useCanvas(drawFunction, canvasPixelRatio);\n  const sizeInPixels = { width: `${width}px`, height: `${height}px` };\n  return <canvas\n    width={width * canvasPixelRatio}\n    height={height * canvasPixelRatio}\n    style={{ ...sizeInPixels, ...style }}\n    ref={canvasRef}\n    onTouchStart={touchstart}\n    onTouchMove={touchmove}\n    onTouchEnd={touchend}\n    onMouseMove={mousemove}\n    onMouseDown={mousedown}\n    onMouseUp={mouseup}\n    onClick={click}\n  />;\n}\n\n","import { useRef, useEffect } from \"react\";\n\nexport default function useCanvas(draw, ratio = 1) {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    function renderFrame() {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.save();\n      ctx.scale(ratio, ratio);\n      draw(ctx);\n      ctx.restore();\n    }\n    const animationFrameId = requestAnimationFrame(renderFrame);\n\n    return () => cancelAnimationFrame(animationFrameId);\n  }, [draw]);\n\n  return canvasRef;\n}\n\n","import React from 'react';\nimport Canvas2d from './Canvas2d';\n\nexport default function ResponsiveCanvas({\n  click,\n  canvasPixelRatio = 2,\n  canvasStyle = {},\n  canvasDrawFunction = () => {},\n  eventCanvasDrawFunction,\n  eventCanvasStyle = { position: 'absolute', top: 0, left: 0, opacity: 0 },\n  height,\n  mousemove,\n  mousedown,\n  mouseup,\n  touchend,\n  touchmove,\n  touchstart,\n  width,\n  wrapperClassName = 'canvasWrapper',\n  wrapperSizeRef,\n  wrapperStyle = {},\n}) {\n  const touchCanvas = eventCanvasDrawFunction\n    ? <Canvas2d\n      canvasPixelRatio={canvasPixelRatio}\n      width={width}\n      height={height}\n      drawFunction={eventCanvasDrawFunction}\n      style={{ ...canvasStyle, ...eventCanvasStyle }}\n      touchstart={touchstart}\n      touchmove={touchmove}\n      touchend={touchend}\n      mousemove={mousemove}\n      mousedown={mousedown}\n      mouseup={mouseup}\n      click={click}\n    />\n    : '';\n  const touchStyles = eventCanvasDrawFunction\n    ? { pointerEvents: 'none' }\n    : {};\n  return <div\n    className={wrapperClassName}\n    ref={wrapperSizeRef}\n    style={{\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      ...wrapperStyle,\n    }}\n  >\n    {touchCanvas}\n    <Canvas2d\n      canvasPixelRatio={canvasPixelRatio}\n      width={width}\n      height={height}\n      drawFunction={canvasDrawFunction}\n      style={{ ...canvasStyle, ...touchStyles }}\n    />\n  </div>;\n};\n","import React from 'react';\n\nexport default function Tooltip({\n  borderWidth,\n  opacity,\n  content,\n  contentWidth,\n  left,\n  font,\n  padding,\n  top,\n}) {\n  return <div\n    className={'tooltipWrapper'}\n    style={{\n      position: 'absolute',\n      opacity,\n      top: `${top}px`,\n      left: `${left}px`,\n    }}\n  >\n    <span\n      className={'tooltipArrow'}\n      style={{\n        content: \"\",\n        position: 'absolute',\n        bottom: '100%',\n        left: '50%',\n        borderWidth: `-${borderWidth}px`,\n        borderStyle: 'solid',\n        borderColor: 'transparent transparent #999 transparent',\n      }}\n    />\n    <span\n      className={'tooltipContent'}\n      style={{\n        position: 'absolute',\n        padding: `${padding}px`,\n        width: `${contentWidth}px`,\n        top: '100%',\n        left: '50%',\n        marginLeft: `-${contentWidth / 2}px`, /* center the tooltip */\n        font: font,\n        color: '#000',\n        backgroundColor: '#fff',\n        border: '2px solid #999',\n        borderRadius: '5px',\n        pointerEvents: 'none',\n        opacity: 1,\n        zIndex: 1,\n      }}\n    >\n      {content}\n    </span>\n  </div>;\n}\n","import { reduce } from 'lodash-es';\n\nconst uniqueColor = (index) => {\n  return (index < 16777215)\n    ? `rgb(${index & 0xff},${(index & 0xff00) >> 8},${(index & 0xff0000) >> 16})`\n    : '';\n};\n\nexport default ({\n  nodes,\n  uniqueIdPropName = 'uniqueId',\n  groupPropName,\n  groupIndexPropName = 'groupIndex',\n  groupKeys,\n}) => {\n  const groupCounts = Array.isArray(groupKeys)\n    ? groupKeys.reduce((acc, key) => ({ ...acc, [key]: 0 }), {})\n    : {};\n\n  const colorToNode = {};\n  const nodeIdToColor = {};\n  const indexed = reduce(nodes, (acc, node, index) => {\n    const { [groupPropName]: group, [uniqueIdPropName]: id = index, } = node;\n    if(!groupCounts[group]) {\n      groupCounts[group] = 0;\n    }\n    const groupIndex = groupCounts[group]++;\n\n    // unique color (from http://bl.ocks.org/Jverma/70f7975a72358e6d69cdd4bf6a0569e7)\n    const color = uniqueColor(index + 1);\n    colorToNode[color] = node;\n    nodeIdToColor[id] = color;\n\n    acc[id] = {\n      ...node,\n      [uniqueIdPropName]: id,\n      [groupIndexPropName]: groupIndex,\n      [groupPropName]: group,\n    };\n    return acc;\n  }, {});\n  return { colorToNode, nodes: indexed, groupCounts, groupIndexPropName, nodeIdToColor };\n};\n","import { scaleBand, scaleLinear } from 'd3-scale';\n\nconst optRadius = ({ bandwidth, height, margin, maxNodesPerBar }) => {\n  // how much area do we have per bar\n  const totalBarArea = bandwidth * (height - margin.top - margin.bottom);\n  const areaPerSquare = totalBarArea / maxNodesPerBar;\n  // radius will be half the side of the square\n  return Math.sqrt(areaPerSquare) * 0.5;\n};\n\nexport default ({\n  bandPaddingInner = 0.5,\n  bandPaddingOuter = 0.7,\n  isHangingBar = true,\n  groupIndexPropName = 'groupIndex',\n  groupPropName,\n  groupKeys,\n  height,\n  margin = { top: 10, right: 10, bottom: 10, left: 10 },\n  nodeCount,\n  radiusToPaddingRatio = 0.9,\n  width,\n}) => {\n  // determine x scale based on the width and number of groups\n  const xScale = scaleBand()\n    .domain(groupKeys)\n    .range([margin.left, width - margin.right])\n    .paddingInner([bandPaddingInner])\n    .paddingOuter([bandPaddingOuter]);\n\n  // optimum radius and radius padding, given the amount of space we have\n  const radiusWithPadding = optRadius({\n    bandwidth: xScale.bandwidth(),\n    height,\n    maxNodesPerBar: nodeCount,\n    margin,\n    width,\n  });\n  // divide radius and padding up according to user defined ratio\n  const radius = radiusWithPadding * radiusToPaddingRatio;\n\n  // constants to compute the x and y positions from a node indexed by group\n  const diameter = radiusWithPadding * 2;\n  const outerSpace = xScale.step() * xScale.paddingOuter();\n  const nNodesPerRow = Math.ceil(xScale.bandwidth() / diameter);\n\n  const xAccessor = (node) => {\n    const xOff = (Math.floor(node[groupIndexPropName] % nNodesPerRow) * diameter) + radiusWithPadding - outerSpace;\n    return xScale(node[groupPropName])+ xOff;\n  };\n\n  const yRange = [height - margin.bottom, margin.top];\n  const yScale = scaleLinear()\n    .domain([0, height])\n    .range(isHangingBar ? yRange.reverse() : yRange);\n\n  const yAccessor = (node) => {\n    const rowN = Math.ceil((node[groupIndexPropName] + 1) / nNodesPerRow);\n    return yScale(rowN * diameter);\n  };\n\n  const radiusAccessor = () => (radius);\n\n  return {\n    radiusWithPadding,\n    radiusAccessor,\n    xAccessor,\n    xScale,\n    yAccessor,\n  };\n};\n","import { forEach } from 'lodash-es';\n\n// modified from flubber's src: https://github.com/veltman/flubber/blob/master/src/shape.js\nfunction circlePath(x, y, radius) {\n  /* eslint-disable prefer-template */\n  const l = x - radius + ',' + y;\n  const r = x + radius + ',' + y;\n  const pre = 'A' + radius + ',' + radius + ',0,1,1,';\n\n  return 'M' + l + pre + r + pre + l + 'Z';\n  /* eslint-enable prefer-template */\n}\n\nexport default ({\n  nodes,\n  colorAccessor,\n  radiusAccessor,\n  strokeColorAccessor = () => ('#aaa'),\n  strokeWidth = '2',\n  strokeLineJoin = 'round',\n  xAccessor,\n  yAccessor,\n}) => {\n  return (ctx) => {\n    forEach(nodes, (d, i) => {\n      const path2 = new Path2D(circlePath(xAccessor(d), yAccessor(d), radiusAccessor(d)));\n\n      // Node outline\n      ctx.strokeStyle = strokeColorAccessor(d);\n      ctx.lineWidth = strokeWidth;\n      ctx.lineJoin = strokeLineJoin;\n      ctx.stroke(path2);\n\n      // Node fill\n      ctx.fillStyle = colorAccessor(d);\n      ctx.fill(path2);\n    });\n  };\n}\n","\nexport default ({\n  colorAccessor,\n  font = '30px Arial',\n  fontSecondary = '20px Arial',\n  fontStrokeColor = '#aaa',\n  fontStrokeWidth = 0.25,\n  groupCounts,\n  groupKeys,\n  labels,\n  xAccessor,\n  yAccessor,\n  numberOffset = 20,\n}) => {\n  return (ctx) => {\n\n    let counts = [];\n    let total = 0;\n    if (groupCounts) {\n      counts = Object.values(groupCounts);\n      total = counts.reduce((sum, count) => (sum + count), 0);\n    }\n    if (groupKeys.length !== labels.length) {\n      return;\n    }\n    groupKeys.forEach(function(group, i) {\n      const x = xAccessor(group);\n      const y = yAccessor(group);\n      const color = colorAccessor(group);\n\n      ctx.font = font;\n      ctx.fillStyle = color;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(labels[i], x, y);\n      ctx.lineWidth = fontStrokeWidth;\n      ctx.strokeStyle = fontStrokeColor;\n      ctx.strokeText(labels[i], x, y);\n\n      if (counts.length === labels.length) {\n        const percent = counts[i] / total * 100;\n        const percentPrecise = percent < 1 ? percent.toPrecision(1) : Math.round(percent);\n        const progressLabel = `${percentPrecise}% (${counts[i]})`;\n        ctx.font = fontSecondary;\n        ctx.fillText(progressLabel, x, y + numberOffset);\n        ctx.strokeText(progressLabel, x, y + numberOffset);\n      }\n    });\n  };\n}\n","import React, { useEffect, useReducer } from 'react';\nimport { omit, map, reduce } from 'lodash-es';\nimport useResizeObserver from \"use-resize-observer\";\nimport ResponsiveCanvas from '../../components/Canvas/ResponsiveCanvas';\nimport Tooltip from '../../components/Tooltip/Tooltip';\nimport computeIndexedNodes from './utils/computeIndexedNodes';\nimport computeLayout from './utils/computeLayout';\nimport dotBarDrawFunction from './utils/drawDotBarFunction';\nimport labelDrawFunction from './utils/drawLabelsFunction';\n\nexport const stateReducer = (state, action) => {\n  switch(action.type) {\n    case 'SET_TOOLTIP_CONTENT':\n      return { ...state, ...action.payload };\n    case 'SET_LAYOUT':\n      return { ...state, ...action.payload };\n    case 'START_RENDER':\n      return { ...state, isRendering: true };\n    case 'FINISH_RENDER':\n      return { ...state, isRendering: false };\n    default:\n      throw new Error('Invalid action type in progressReducer');\n  }\n};\n\nexport default function DotBarChart({\n  bandPaddingInner = 0.1,\n  bandPaddingOuter = 0.1,\n  className,\n  circleStrokeColor = '#aaa',\n  circleStrokeWidth,\n  colorAccessor,\n  fontStrokeColor,\n  fontStrokeWidth,\n  groupPropName,\n  groupKeys,\n  groupLabels,\n  isHangingBar = true,\n  labelColorAccessor,\n  labelFont = 'bold 1.1rem Arial',\n  labelFontSecondary = '0.9rem Arial',\n  nodes,\n  margin = { top: 60, right: 20, bottom: 10, left: 20 },\n  radiusToPaddingRatio = 0.8,\n  uniqueIdPropName,\n  wrapperStyle,\n}) {\n  // force pixel ratio to be 2 so we can map x/y back to color for tooltip\n  const canvasPixelRatio = 2;\n  const tooltipPadding = 3; // px\n\n  const [sizeRef, width, height] = useResizeObserver();\n\n  const [state, dispatch] = useReducer(stateReducer, {\n    isRendering: false,\n    nodeCount: 0,\n    tooltipContent: '',\n    tooltipContentWidth: 0,\n    tooltipOffset: [0, 0],\n    radiusWithPadding: 1,\n    radiusAccessor: () => (1),\n    xAccessor: () => (0),\n    xScale: () => (0),\n    yAccessor: () => (0),\n  });\n\n  // rebuild the layout when the dimensions, chart direction, or number of group keys changes\n  useEffect(() => {\n    // compute the layout\n    const {\n      radiusWithPadding,\n      radiusAccessor,\n      xAccessor,\n      xScale,\n      yAccessor,\n    } = computeLayout({\n      bandPaddingInner,\n      bandPaddingOuter,\n      isHangingBar,\n      groupIndexPropName,\n      groupKeys,\n      groupPropName,\n      margin,\n      nodeCount: nodes.length,\n      width,\n      height,\n      radiusToPaddingRatio,\n    });\n\n    // store the layout functions as state\n    dispatch({\n      type: 'SET_LAYOUT',\n      payload: {\n        nodeCount: nodes.length,\n        radiusWithPadding,\n        radiusAccessor,\n        xAccessor,\n        xScale,\n        yAccessor,\n        },\n    });\n  }, [width, height, groupKeys, isHangingBar, state.nodeCount]);\n\n  // index the nodes by group, which lets the layout place each node in a particular order\n  const {\n    colorToNode, // unique mapping of rgb() -> unique node\n    nodes: indexed,\n    groupCounts,\n    groupIndexPropName,\n    nodeIdToColor,\n  } = computeIndexedNodes({\n    groupPropName,\n    groupKeys,\n    nodes,\n    uniqueIdPropName,\n  });\n\n  // build a draw function that renders every node as a unique color\n  const eventCanvasDrawFunction = dotBarDrawFunction({\n    nodes: indexed,\n    // access the color that maps to a node\n    colorAccessor: (node) => (nodeIdToColor[node[uniqueIdPropName]] || ''),\n    radiusAccessor: () => (state.radiusWithPadding),\n    strokeColorAccessor: (node) => (nodeIdToColor[node[uniqueIdPropName]] || ''),\n    strokeWidth: 0,\n    xAccessor: state.xAccessor,\n    yAccessor: state.yAccessor,\n  });\n\n  // detect mouse movements and update the tooltip content\n  const mousemove = (e) => {\n    const event = e;\n\n    const hiddenCtx = event.target.getContext('2d');\n    const rgb = hiddenCtx.getImageData(\n      event.nativeEvent.offsetX * canvasPixelRatio,\n      event.nativeEvent.offsetY * canvasPixelRatio,\n      1,\n      1).data;\n\n    // find the node associated with the unique color\n    const node = colorToNode[`rgb(${rgb[0]},${rgb[1]},${rgb[2]})`];\n\n    if (node){\n      const renderProps = omit(node, [groupPropName, groupIndexPropName]);\n\n      // find the longest text width\n      const tooltipContentWidth = reduce(renderProps, (maxWidth, value, key) => {\n        // measure content width\n        hiddenCtx.font = labelFontSecondary;\n        const width = hiddenCtx.measureText(`${value}: ${key}`).width;\n        return width > maxWidth\n          ? width + (2 * tooltipPadding)\n          : maxWidth;\n      }, 0);\n\n      dispatch({\n        type: 'SET_TOOLTIP_CONTENT',\n        payload: {\n          tooltipContent: map(\n            renderProps,\n            (value, key) => (<p style={{ margin: '2px', textAlign: 'center' }} key={key}>{key}: {value}</p>)\n          ),\n          tooltipContentWidth,\n          tooltipOffset: [event.pageX, event.pageY],\n        }\n      });\n    } else {\n      dispatch({\n        type: 'SET_TOOLTIP_CONTENT',\n        payload: {\n          tooltipContent: '',\n          tooltipContentWidth: 0,\n          tooltipOffset: state.tooltipContent,\n        }\n      });\n    }\n  };\n\n  // render by calling the stateful layout functions\n  const dotBarDraw = dotBarDrawFunction({\n    nodes: indexed,\n    colorAccessor,\n    radiusAccessor: state.radiusAccessor,\n    strokeColorAccessor: () => (circleStrokeColor),\n    strokeWidth: circleStrokeWidth,\n    xAccessor: state.xAccessor,\n    yAccessor: state.yAccessor,\n  });\n  // render labels (top label is user defined, bottom is \"% (count)\"\n  const labelDraw = labelDrawFunction({\n    colorAccessor: labelColorAccessor || colorAccessor,\n    font: labelFont,\n    fontSecondary: labelFontSecondary,\n    fontStrokeColor,\n    fontStrokeWidth,\n    groupCounts,\n    groupKeys,\n    labels: groupLabels,\n    xAccessor: (group) => (\n      state.xScale(group) // start at left edge of bar\n      - state.xScale.step() * state.xScale.paddingOuter() // offset the outer left padding\n      + state.xScale.bandwidth() / 2 // add the half bandwidth to center the text\n    ),\n    yAccessor: () => (margin.top / 3),\n    numberOffset: margin.top / 3 + 5,\n  });\n  const drawFunction = (ctx) => {\n    dispatch({ type: 'START_RENDER' });\n    dotBarDraw(ctx);\n    labelDraw(ctx);\n    dispatch({ type: 'FINISH_RENDER' });\n  };\n\n  return <>\n    <ResponsiveCanvas\n      canvasPixelRatio={canvasPixelRatio}\n      canvasDrawFunction={drawFunction}\n      canvasStyle={{ background: 'transparent' }}\n      /* un-comment the next two lines to display the event canvas instead of the actual canvas */\n      /* canvasStyle={{ background: 'transparent', opacity: 0  }}\n      eventCanvasStyle = {{ position: 'absolute', top: 0, left: 0, opacity: 1 }} */\n      eventCanvasDrawFunction={eventCanvasDrawFunction}\n      height={height}\n      mousemove={mousemove}\n      width={width}\n      wrapperClassName={className}\n      wrapperSizeRef={sizeRef}\n      wrapperStyle={wrapperStyle}\n    />\n    <Tooltip\n      borderWidth={state.radiusWithPadding}\n      content={state.tooltipContent}\n      opacity={state.tooltipContent === '' ? 0 : 0.85}\n      contentWidth={state.tooltipContentWidth}\n      left={state.tooltipOffset[0]}\n      font={labelFontSecondary}\n      padding={tooltipPadding}\n      top={state.tooltipOffset[1]}\n    />\n    </>;\n};\n","import { csvParse } from 'd3-dsv';\n\nconst jobStatusCSV = `group_id,label,sort_order,color\nD,DONE,7,#2ECC71\nE,RECOVERABLE,5,#F1948A\nF,FATAL,6,#E74C3C\nG,REGISTERED,1,#D6EAF8\nI,INSTANTIATED,3,#5DADE2\nQ,QUEUED,2,#3498DB\nR,RUNNING,4,#ebd857`;\n\nexport const getDemoMetaDataAndNodes = async ({\n  metadataCsv = jobStatusCSV,\n  nNodes = 20000,\n  groupPropName = 'group_id'\n}) => {\n  const statusCSV = await csvParse(metadataCsv);\n  const jobStatusMetaData = Array.isArray(statusCSV)\n    ? statusCSV.sort((a, b) => (a.sort_order - b.sort_order))\n    : [];\n\n  // start with all nodes at first status\n  const nodes = (new Array(nNodes).fill({}))\n    .map((node, i) => ({\n      unique_id: `id_${i + 1}`,\n      [groupPropName]: jobStatusMetaData[0][groupPropName],\n      some_other_prop: 'with a very long name',\n    }));\n\n  return { nodes, groupMetadataArray: jobStatusMetaData };\n};\n\nexport const getFakeProgress = (nodes, groupKeys, groupPropName) => {\n  const numberToAdvance = Math.floor(Math.random() * 50);\n  const indicesToAdvance = (new Array(numberToAdvance))\n    .fill(0).map(() => (Math.floor(Math.random() * nodes.length)));\n  // copy nodes and move some of them forward\n  return nodes.map((node, index) => {\n    if (indicesToAdvance.includes(index)) {\n      const groupIndex = groupKeys.findIndex((key) => (key === node[groupPropName]));\n      let nextGroupIndex = groupIndex;\n      if (groupKeys[groupIndex] === 'E') { // RECOVERABLE\n        nextGroupIndex = 1;\n      } else if (groupKeys[groupIndex] === 'F') { // FATAL\n          nextGroupIndex = groupIndex;\n      } else if (groupKeys[groupIndex] === 'R') { // RUNNING\n        const randomErrorState = Math.random() <= 0.05 ? groupIndex + 2 : groupIndex + 1;\n        nextGroupIndex = (Math.random() <= 0.1)\n          ? randomErrorState\n          : groupKeys.length - 1;\n      } else {\n        nextGroupIndex = groupIndex < groupKeys.length - 2 ? groupIndex + 1 : groupKeys.length - 1;\n      }\n      return { ...node, [groupPropName]: groupKeys[nextGroupIndex] };\n    }\n    return { ...node }\n  });\n};\n\n","import { scaleOrdinal } from 'd3-scale';\nimport { has } from 'lodash-es';\nimport React, { useEffect, useReducer } from 'react';\nimport useInterval from '../../hooks/useInterval';\nimport DotBarChart from '../../components/DotBarChart/DotBarChart';\nimport { getFakeProgress } from './demoDataGenerator';\n\nconst jobStateReducer = (state, action) => {\n  switch(action.type) {\n    case 'SET_NODES':\n      return { ...state, nodes: action.payload };\n    case 'SET_GROUP_METADATA':\n      const {\n        colorPropName,\n        groupMetadataArray,\n        groupPropName,\n        labelPropName,\n      } = action.payload;\n\n      const groupMetadata = groupMetadataArray\n        .reduce((acc, meta) => ({ ...acc, [meta[groupPropName]]: meta }), {});\n      const colorRange = groupMetadataArray.map(meta => meta[colorPropName]);\n      const groupKeys = groupMetadataArray.map(meta => meta[groupPropName]);\n      const groupLabels = groupMetadataArray.map(meta => meta[labelPropName]);\n\n      const colorScale = scaleOrdinal()\n        .domain(groupKeys)\n        .range(colorRange)\n      // dual use color accessor:\n      // takes either a node object where node = { [groupPropName]: 'someGroupId' }\n      // OR the group id itself: node = 'someGroupId'\n      const colorAccessor = node => {\n        return has(node, groupPropName)\n          ? colorScale(node[groupPropName])\n          : colorScale(node)\n      };\n\n      return { ...state, colorAccessor, groupMetadata, groupKeys, groupLabels };\n    default:\n      throw new Error('Invalid action type in jobStateReducer');\n  }\n};\n\nexport default function JobStatus({\n  circleStrokeColor,\n  circleStrokeWidth,\n  className,\n  colorPropName = 'color',\n  fontStrokeColor,\n  fontStrokeWidth,\n  groupPropName = 'group_id',\n  labelColorAccessor,\n  labelPropName = 'label',\n  labelFont = 'bold 1.1em Arial',\n  labelFontSecondary = '0.9em Arial',\n  margin = { top: 60, right: 20, bottom: 10, left: 20 },\n  nodesMetadataPromise,\n  pollingInterval = 500,\n  uniqueIdPropName,\n  wrapperStyle = { height: '100%', width: '100%' },\n}) {\n  const [state, dispatch] = useReducer(jobStateReducer, {\n    colorAccessor: () => ('#fff'),\n    groupMetadata: {},\n    groupKeys: [],\n    groupLabels: [],\n    nodes: [],\n  });\n\n  // fetch initial metadata and state\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        groupMetadataArray,\n        nodes,\n      } = await nodesMetadataPromise();\n\n      dispatch({\n        type: 'SET_GROUP_METADATA',\n        // keyed by groupPropName\n        payload: {\n          colorPropName,\n          groupPropName,\n          groupMetadataArray,\n          labelPropName,\n        },\n      });\n      dispatch({ type: 'SET_NODES', payload: nodes });\n    };\n    fetchData();\n  }, []);\n\n  // poll the \"server\" for new data\n  useInterval(() => {\n    dispatch({\n      type: 'SET_NODES',\n      // TODO: implement real function to poll for data that doesn't require passing in the old nodes\n      payload: getFakeProgress(state.nodes, state.groupKeys, groupPropName),\n    });\n    },\n    pollingInterval);\n\n  return <DotBarChart\n    circleStrokeColor={circleStrokeColor}\n    circleStrokeWidth={circleStrokeWidth}\n    className={className}\n    colorAccessor={state.colorAccessor}\n    fontStrokeColor={fontStrokeColor}\n    fontStrokeWidth={fontStrokeWidth}\n    groupPropName={groupPropName}\n    groupCounts={state.groupKeys.length}\n    groupKeys={state.groupKeys}\n    groupLabels={state.groupLabels}\n    labelColorAccessor={labelColorAccessor}\n    labelFont={labelFont}\n    labelFontSecondary={labelFontSecondary}\n    nodes={state.nodes}\n    margin={margin}\n    uniqueIdPropName={uniqueIdPropName}\n    wrapperStyle={wrapperStyle}\n  />\n};\n","/** copied from https://overreacted.io/making-setinterval-declarative-with-react-hooks/ */\nimport { useEffect, useRef } from 'react';\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport JobStatus from './containers/JobStatus/JobStatus';\nimport { getDemoMetaDataAndNodes } from './containers/JobStatus/demoDataGenerator';\n\n\nconst JobStatusDemoWithNNodes = ({ match }) => {\n  const nNodes = match.params.nNodes ? Number(match.params.nNodes) : 1000;\n  const groupPropName = 'group_id';\n  /** nodesMetadataPromise should resolve to an object with properties:\n   * {\n   *  groupMetadataArray - array of objects with properties colorPropName, groupPropName, and labelPropName\n   *  nodes - array of objects with colorPropName, groupPropName and (optional) uniqueIdPropName\n   * }\n  */\n  const nodesMetadataPromise = getDemoMetaDataAndNodes.bind(null, { nNodes, groupPropName });\n\n  return <div className=\"App\">\n    <h2 className=\"Job-status-title\">Job Status Monitor for {nNodes} nodes</h2>\n    <div className=\"Job-status-graph-container\">\n      <JobStatus\n        colorPropName=\"color\"\n        className=\"Job-status-graph\"\n        groupPropName={groupPropName}\n        labelFont=\"700 1.1rem Nunito\"\n        labelFontSecondary = \"700 0.9rem Nunito\"\n        labelPropName=\"label\"\n        margin={{ top: 60, right: 20, bottom: 20, left: 20 }}\n        nodesMetadataPromise={nodesMetadataPromise}\n        pollingInterval={1500}\n        uniqueIdPropName=\"demoDataGeneratorId\"\n        wrapperStyle={{ height: '80%', width: '80%' }}\n      />\n    </div>\n  </div>;\n};\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n        {[\"/jobstatus/:nNodes\", \"/jobstatus\", \"/:nNodes\", \"\"].map((path, i) => (\n          <Route\n            key={i}\n            exact path={path}\n            component={JobStatusDemoWithNNodes}\n          />\n        ))}\n      </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}