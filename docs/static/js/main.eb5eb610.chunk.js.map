{"version":3,"sources":["components/Canvas/Canvas2d.js","hooks/useCanvas.js","components/Canvas/ResponsiveCanvas.js","components/DotBarChart/utils/computeLayout.js","components/DotBarChart/utils/drawDotBarFunction.js","components/DotBarChart/DotBarChart.js","components/DotBarChart/utils/computeIndexedNodes.js","components/DotBarChart/utils/drawLabelsFunction.js","containers/JobStatus/demoDataGenerator.js","containers/JobStatus/JobStatus.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js"],"names":["Canvas2d","_ref","_ref$drawFunction","drawFunction","_ref$height","height","_ref$width","width","_ref$canvasPixelRatio","canvasPixelRatio","_ref$style","style","canvasRef","draw","ratio","arguments","length","undefined","useRef","useEffect","canvas","current","ctx","getContext","animationFrameId","requestAnimationFrame","clearRect","save","scale","restore","cancelAnimationFrame","useCanvas","sizeInPixels","concat","react_default","a","createElement","Object","objectSpread","ref","ResponsiveCanvas","_ref$canvasStyle","canvasStyle","_ref$canvasDrawFuncti","canvasDrawFunction","_ref$wrapperClassName","wrapperClassName","wrapperSizeRef","_ref$wrapperStyle","wrapperStyle","className","position","computeLayout","_ref2","_ref2$bandPaddingInne","bandPaddingInner","_ref2$bandPaddingOute","bandPaddingOuter","_ref2$isHangingBar","isHangingBar","_ref2$groupIndexPropN","groupIndexPropName","groupPropName","groupKeys","_ref2$margin","margin","top","right","bottom","left","nodeCount","_ref2$radiusToPadding","radiusToPaddingRatio","xScale","scaleBand","domain","range","paddingInner","paddingOuter","radiusAndPadding","bandwidth","maxNodesPerBar","areaPerSquare","Math","sqrt","optRadius","radius","diameter","outerSpace","step","nNodesPerRow","ceil","yRange","yScale","scaleLinear","reverse","radiusAccessor","xAccessor","node","xOff","floor","yAccessor","rowN","stateReducer","state","action","type","payload","isRendering","Error","DotBarChart","_ref$bandPaddingInner","_ref$bandPaddingOuter","circleStrokeColor","circleStrokeWidth","colorAccessor","fontStrokeColor","fontStrokeWidth","groupLabels","_ref$isHangingBar","labelColorAccessor","_ref$labelFont","labelFont","_ref$labelFontSeconda","labelFontSecondary","nodes","_ref$margin","_ref$radiusToPaddingR","uniqueIdPropName","_useResizeObserver","useResizeObserver","_useResizeObserver2","slicedToArray","sizeRef","_useReducer","useReducer","_useReducer2","dispatch","_computeLayout","_computeIndexedNodes","_ref$uniqueIdPropName","_ref$groupIndexPropNa","groupCounts","Array","isArray","reduce","acc","key","defineProperty","index","_objectSpread3","group","_node$uniqueIdPropNam","id","groupIndex","computeIndexedNodes","indexed","dotBarDraw","_ref$strokeColor","strokeColor","_ref$strokeWidth","strokeWidth","_ref$strokeLineJoin","strokeLineJoin","forEach","d","r","x","y","path2","Path2D","l","pre","circlePath","strokeStyle","lineWidth","lineJoin","stroke","fillStyle","fill","dotBarDrawFunction","labelDraw","_ref$font","font","_ref$fontSecondary","fontSecondary","_ref$fontStrokeColor","_ref$fontStrokeWidth","labels","_ref$numberOffset","numberOffset","counts","total","values","sum","count","i","color","textAlign","textBaseline","fillText","strokeText","percent","percentPrecise","toPrecision","round","progressLabel","labelDrawFunction","background","getDemoMetaDataAndNodes","asyncToGenerator","regenerator_default","mark","_callee","_ref$metadataCsv","metadataCsv","_ref$nNodes","nNodes","_ref$groupPropName","statusCSV","jobStatusMetaData","wrap","_context","prev","next","csvParse","sent","sort","b","sort_order","map","demoDataGeneratorId","abrupt","groupMetadataArray","stop","_x","apply","this","getFakeProgress","numberToAdvance","random","indicesToAdvance","includes","findIndex","nextGroupIndex","randomErrorState","jobStateReducer","_action$payload","colorPropName","labelPropName","groupMetadata","meta","colorRange","colorScale","scaleOrdinal","has","JobStatus","_ref$colorPropName","_ref$labelPropName","nodesMetadataPromise","_ref$pollingInterval","pollingInterval","_fetchData","fetchData","callback","delay","savedCallback","setInterval","clearInterval","useInterval","JobStatusDemoWithNNodes","match","params","Number","bind","Boolean","window","location","hostname","ReactDOM","render","react_router_dom","react_router","path","exact","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eb5eb610.chunk.js","sourcesContent":["import React from 'react';\nimport  useCanvas from '../../hooks/useCanvas';\n\nexport default ({\n  drawFunction = () => {},\n  height = 500,\n  width = 500,\n  canvasPixelRatio = 2,\n  style = {},\n}) => {\n  const canvasRef = useCanvas(drawFunction, canvasPixelRatio);\n  const sizeInPixels = { width: `${width}px`, height: `${height}px` };\n  return <canvas\n    width={width * canvasPixelRatio}\n    height={height * canvasPixelRatio}\n    style={{ ...sizeInPixels, ...style }}\n    ref={canvasRef}\n  />;\n}\n\n","import { useRef, useEffect } from \"react\";\n\nexport default function useCanvas(draw, ratio = 1) {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    function renderFrame() {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.save();\n      ctx.scale(ratio, ratio);\n      draw(ctx);\n      ctx.restore();\n    }\n    const animationFrameId = requestAnimationFrame(renderFrame);\n\n    return () => cancelAnimationFrame(animationFrameId);\n  }, [draw]);\n\n  return canvasRef;\n}\n\n","import React from 'react';\nimport Canvas2d from './Canvas2d';\n\nexport default ({\n  canvasPixelRatio = 2,\n  canvasStyle = {},\n  canvasDrawFunction = () => {},\n  height,\n  width,\n  wrapperClassName = 'canvasWrapper',\n  wrapperSizeRef,\n  wrapperStyle = {},\n}) => {\n  return <div\n    className={wrapperClassName}\n    ref={wrapperSizeRef}\n    style={{\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      ...wrapperStyle,\n    }}\n  >\n    <Canvas2d\n      canvasPixelRatio={canvasPixelRatio}\n      width={width}\n      height={height}\n      drawFunction={canvasDrawFunction}\n      style={canvasStyle}\n    />\n  </div>;\n};\n","import { scaleBand, scaleLinear } from 'd3-scale';\n\nconst optRadius = ({ bandwidth, height, margin, maxNodesPerBar }) => {\n  // how much area do we have per bar\n  const totalBarArea = bandwidth * (height - margin.top - margin.bottom);\n  const areaPerSquare = totalBarArea / maxNodesPerBar;\n  // radius will be half the side of the square\n  return Math.sqrt(areaPerSquare) * 0.5;\n};\n\nexport default ({\n  bandPaddingInner = 0.5,\n  bandPaddingOuter = 0.7,\n  isHangingBar = true,\n  groupIndexPropName = 'groupIndex',\n  groupPropName,\n  groupKeys,\n  height,\n  margin = { top: 10, right: 10, bottom: 10, left: 10 },\n  nodeCount,\n  radiusToPaddingRatio = 0.9,\n  width,\n}) => {\n  // determine x scale based on the width and number of groups\n  const xScale = scaleBand()\n    .domain(groupKeys)\n    .range([margin.left, width - margin.right])\n    .paddingInner([bandPaddingInner])\n    .paddingOuter([bandPaddingOuter]);\n\n  // optimum radius and radius padding, given the amount of space we have\n  const radiusAndPadding = optRadius({\n    bandwidth: xScale.bandwidth(),\n    height,\n    maxNodesPerBar: nodeCount,\n    margin,\n    width,\n  });\n  // divide radius and padding up according to user defined ratio\n  const radius = radiusAndPadding * radiusToPaddingRatio;\n\n  // constants to compute the x and y positions from a node indexed by group\n  const diameter = radiusAndPadding * 2;\n  const outerSpace = xScale.step() * xScale.paddingOuter();\n  const nNodesPerRow = Math.ceil(xScale.bandwidth() / diameter);\n\n  const xAccessor = (node) => {\n    const xOff = (Math.floor(node[groupIndexPropName] % nNodesPerRow) * diameter) + radiusAndPadding - outerSpace;\n    return xScale(node[groupPropName])+ xOff;\n  };\n\n  const yRange = [height - margin.bottom, margin.top];\n  const yScale = scaleLinear()\n    .domain([0, height])\n    .range(isHangingBar ? yRange.reverse() : yRange);\n\n  const yAccessor = (node) => {\n    const rowN = Math.ceil((node[groupIndexPropName] + 1) / nNodesPerRow);\n    return yScale(rowN * diameter);\n  };\n\n  const radiusAccessor = () => (radius);\n\n  return {\n    radiusAccessor,\n    xAccessor,\n    xScale,\n    yAccessor,\n  };\n};\n","import { forEach } from 'lodash-es';\n\n// modified from flubber's src: https://github.com/veltman/flubber/blob/master/src/shape.js\nfunction circlePath(x, y, radius) {\n  /* eslint-disable prefer-template */\n  const l = x - radius + ',' + y;\n  const r = x + radius + ',' + y;\n  const pre = 'A' + radius + ',' + radius + ',0,1,1,';\n\n  return 'M' + l + pre + r + pre + l + 'Z';\n  /* eslint-enable prefer-template */\n}\n\nexport default ({\n  nodes,\n  colorAccessor,\n  radiusAccessor,\n  strokeColor = '#aaa',\n  strokeWidth = '2',\n  strokeLineJoin = 'round',\n  xAccessor,\n  yAccessor,\n}) => {\n  return (ctx) => {\n    forEach(nodes, (d) => {\n      const r = radiusAccessor(d);\n      const x = xAccessor(d);\n      const y = yAccessor(d);\n\n      const path2 = new Path2D(circlePath(x, y, r));\n\n      // Node outline\n      ctx.strokeStyle = strokeColor;\n      ctx.lineWidth = strokeWidth;\n      ctx.lineJoin = strokeLineJoin;\n      ctx.stroke(path2);\n\n      // Node fill\n      ctx.fillStyle = colorAccessor(d);\n      ctx.fill(path2);\n    });\n  };\n}\n","import React, { useEffect, useReducer } from 'react';\nimport useResizeObserver from \"use-resize-observer\";\nimport ResponsiveCanvas from '../../components/Canvas/ResponsiveCanvas';\nimport computeIndexedNodes from './utils/computeIndexedNodes';\nimport computeLayout from './utils/computeLayout';\nimport dotBarDrawFunction from './utils/drawDotBarFunction';\nimport labelDrawFunction from './utils/drawLabelsFunction';\n\nexport const stateReducer = (state, action) => {\n  switch(action.type) {\n    case 'SET_LAYOUT':\n      return { ...state, ...action.payload };\n    case 'START_RENDER':\n      return { ...state, isRendering: true };\n    case 'FINISH_RENDER':\n      return { ...state, isRendering: false };\n    default:\n      throw new Error('Invalid action type in progressReducer');\n  }\n};\n\nexport default ({\n  bandPaddingInner = 0.1,\n  bandPaddingOuter = 0.1,\n  className,\n  circleStrokeColor,\n  circleStrokeWidth,\n  colorAccessor,\n  fontStrokeColor,\n  fontStrokeWidth,\n  groupPropName,\n  groupKeys,\n  groupLabels,\n  isHangingBar = true,\n  labelColorAccessor,\n  labelFont = 'bold 1.1rem Arial',\n  labelFontSecondary = '0.9rem Arial',\n  nodes,\n  margin = { top: 60, right: 20, bottom: 10, left: 20 },\n  radiusToPaddingRatio = 0.8,\n  uniqueIdPropName,\n  wrapperStyle,\n}) => {\n  const [sizeRef, width, height] = useResizeObserver();\n\n  const [state, dispatch] = useReducer(stateReducer, {\n    nodeCount: 0,\n    radiusAccessor: () => (1),\n    xAccessor: () => (0),\n    xScale: () => (0),\n    yAccessor: () => (0),\n    isRendering: false,\n  });\n\n  // rebuild the layout when the dimensions, chart direction, or number of group keys changes\n  useEffect(() => {\n    // compute the layout\n    const {\n      radiusAccessor,\n      xAccessor,\n      xScale,\n      yAccessor,\n    } = computeLayout({\n      bandPaddingInner,\n      bandPaddingOuter,\n      isHangingBar,\n      groupIndexPropName,\n      groupKeys,\n      groupPropName,\n      margin,\n      nodeCount: nodes.length,\n      width,\n      height,\n      radiusToPaddingRatio,\n    });\n\n    // store the layout functions as state\n    dispatch({\n      type: 'SET_LAYOUT',\n      payload: {\n        nodeCount: nodes.length,\n        radiusAccessor,\n        xAccessor,\n        xScale,\n        yAccessor,\n        },\n    });\n  }, [width, height, groupKeys, isHangingBar, state.nodeCount]);\n\n  // index the nodes by group, which lets the layout place each node in a particular order\n  const { nodes: indexed, groupCounts, groupIndexPropName } = computeIndexedNodes({\n    groupPropName,\n    groupKeys,\n    nodes,\n    uniqueIdPropName,\n  });\n\n  // render by calling the stateful layout functions\n  const dotBarDraw = dotBarDrawFunction({\n    nodes: indexed,\n    colorAccessor,\n    radiusAccessor: state.radiusAccessor,\n    strokeColor: circleStrokeColor,\n    strokeWidth: circleStrokeWidth,\n    xAccessor: state.xAccessor,\n    yAccessor: state.yAccessor,\n  });\n  // render labels (top label is user defined, bottom is \"% (count)\"\n  const labelDraw = labelDrawFunction({\n    colorAccessor: labelColorAccessor || colorAccessor,\n    font: labelFont,\n    fontSecondary: labelFontSecondary,\n    fontStrokeColor,\n    fontStrokeWidth,\n    groupCounts,\n    groupKeys,\n    labels: groupLabels,\n    xAccessor: (group) => (\n      state.xScale(group) // start at left edge of bar\n      - state.xScale.step() * state.xScale.paddingOuter() // offset the outer left padding\n      + state.xScale.bandwidth() / 2 // add the half bandwidth to center the text\n    ),\n    yAccessor: () => (margin.top / 3),\n    numberOffset: margin.top / 3 + 5,\n  });\n  const drawFunction = (ctx) => {\n    dispatch({ type: 'START_RENDER' });\n    dotBarDraw(ctx);\n    labelDraw(ctx);\n    dispatch({ type: 'FINISH_RENDER' });\n  };\n\n  return <ResponsiveCanvas\n    canvasDrawFunction={drawFunction}\n    canvasStyle={{ background: '#fff' }}\n    width={width}\n    height={height}\n    wrapperClassName={className}\n    wrapperSizeRef={sizeRef}\n    wrapperStyle={wrapperStyle}\n  />;\n};\n","import { reduce } from 'lodash-es';\n\nexport default ({\n  nodes,\n  uniqueIdPropName = 'uniqueId',\n  groupPropName,\n  groupIndexPropName = 'groupIndex',\n  groupKeys,\n}) => {\n  const groupCounts = Array.isArray(groupKeys)\n    ? groupKeys.reduce((acc, key) => ({ ...acc, [key]: 0 }), {})\n    : {};\n\n  const indexed = reduce(nodes, (acc, node, index) => {\n    const { [groupPropName]: group, [uniqueIdPropName]: id = index, } = node;\n    if(!groupCounts[group]) {\n      groupCounts[group] = 0;\n    }\n    const groupIndex = groupCounts[group]++;\n    acc[id] = {\n      ...node,\n      [uniqueIdPropName]: id,\n      [groupIndexPropName]: groupIndex,\n      [groupPropName]: group,\n    };\n    return acc;\n  }, {});\n  return { nodes: indexed, groupCounts, groupIndexPropName };\n};\n","\nexport default ({\n  colorAccessor,\n  font = '30px Arial',\n  fontSecondary = '20px Arial',\n  fontStrokeColor = '#aaa',\n  fontStrokeWidth = 0.25,\n  groupCounts,\n  groupKeys,\n  labels,\n  xAccessor,\n  yAccessor,\n  numberOffset = 20,\n}) => {\n  return (ctx) => {\n\n    let counts = [];\n    let total = 0;\n    if (groupCounts) {\n      counts = Object.values(groupCounts);\n      total = counts.reduce((sum, count) => (sum + count), 0);\n    }\n    if (groupKeys.length !== labels.length) {\n      return;\n    }\n    groupKeys.forEach(function(group, i) {\n      const x = xAccessor(group);\n      const y = yAccessor(group);\n      const color = colorAccessor(group);\n\n      ctx.font = font;\n      ctx.fillStyle = color;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(labels[i], x, y);\n      ctx.lineWidth = fontStrokeWidth;\n      ctx.strokeStyle = fontStrokeColor;\n      ctx.strokeText(labels[i], x, y);\n\n      if (counts.length === labels.length) {\n        const percent = counts[i] / total * 100;\n        const percentPrecise = percent < 1 ? percent.toPrecision(1) : Math.round(percent);\n        const progressLabel = `${percentPrecise}% (${counts[i]})`;\n        ctx.font = fontSecondary;\n        ctx.fillText(progressLabel, x, y + numberOffset);\n        ctx.strokeText(progressLabel, x, y + numberOffset);\n      }\n    });\n  };\n}\n","import { csvParse } from 'd3-dsv';\n\nconst jobStatusCSV = `group_id,label,sort_order,color\nD,DONE,7,#2ECC71\nE,RECOVERABLE,5,#F1948A\nF,FATAL,6,#E74C3C\nG,REGISTERED,1,#D6EAF8\nI,INSTANTIATED,3,#5DADE2\nQ,QUEUED,2,#3498DB\nR,RUNNING,4,#ebd857`;\n\nexport const getDemoMetaDataAndNodes = async ({\n  metadataCsv = jobStatusCSV,\n  nNodes = 20000,\n  groupPropName = 'group_id'\n}) => {\n  const statusCSV = await csvParse(metadataCsv);\n  const jobStatusMetaData = Array.isArray(statusCSV)\n    ? statusCSV.sort((a, b) => (a.sort_order - b.sort_order))\n    : [];\n\n  // start with all nodes at first status\n  const nodes = (new Array(nNodes).fill({}))\n    .map((node, i) => ({\n      demoDataGeneratorId: `id_${i}`,\n      [groupPropName]: jobStatusMetaData[0][groupPropName],\n    }));\n\n  return { nodes, groupMetadataArray: jobStatusMetaData };\n};\n\nexport const getFakeProgress = (nodes, groupKeys, groupPropName) => {\n  const numberToAdvance = Math.floor(Math.random() * 50);\n  const indicesToAdvance = (new Array(numberToAdvance))\n    .fill(0).map(() => (Math.floor(Math.random() * nodes.length)));\n  // copy nodes and move some of them forward\n  return nodes.map((node, index) => {\n    if (indicesToAdvance.includes(index)) {\n      const groupIndex = groupKeys.findIndex((key) => (key === node[groupPropName]));\n      let nextGroupIndex = groupIndex;\n      if (groupKeys[groupIndex] === 'E') { // RECOVERABLE\n        nextGroupIndex = 1;\n      } else if (groupKeys[groupIndex] === 'F') { // FATAL\n          nextGroupIndex = groupIndex;\n      } else if (groupKeys[groupIndex] === 'R') { // RUNNING\n        const randomErrorState = Math.random() <= 0.05 ? groupIndex + 2 : groupIndex + 1;\n        nextGroupIndex = (Math.random() <= 0.1)\n          ? randomErrorState\n          : groupKeys.length - 1;\n      } else {\n        nextGroupIndex = groupIndex < groupKeys.length - 2 ? groupIndex + 1 : groupKeys.length - 1;\n      }\n      return { ...node, [groupPropName]: groupKeys[nextGroupIndex] };\n    }\n    return { ...node }\n  });\n};\n\n","import { scaleOrdinal } from 'd3-scale';\nimport { has } from 'lodash-es';\nimport React, { useEffect, useReducer } from 'react';\nimport useInterval from '../../hooks/useInterval';\nimport DotBarChart from '../../components/DotBarChart/DotBarChart';\nimport { getFakeProgress } from './demoDataGenerator';\n\nconst jobStateReducer = (state, action) => {\n  switch(action.type) {\n    case 'SET_NODES':\n      return { ...state, nodes: action.payload };\n    case 'SET_GROUP_METADATA':\n      const {\n        colorPropName,\n        groupMetadataArray,\n        groupPropName,\n        labelPropName,\n      } = action.payload;\n\n      const groupMetadata = groupMetadataArray\n        .reduce((acc, meta) => ({ ...acc, [meta[groupPropName]]: meta }), {});\n      const colorRange = groupMetadataArray.map(meta => meta[colorPropName]);\n      const groupKeys = groupMetadataArray.map(meta => meta[groupPropName]);\n      const groupLabels = groupMetadataArray.map(meta => meta[labelPropName]);\n\n      const colorScale = scaleOrdinal()\n        .domain(groupKeys)\n        .range(colorRange)\n      // dual use color accessor:\n      // takes either a node object where node = { [groupPropName]: 'someGroupId' }\n      // OR the group id itself: node = 'someGroupId'\n      const colorAccessor = node => {\n        return has(node, groupPropName)\n          ? colorScale(node[groupPropName])\n          : colorScale(node)\n      };\n\n      return { ...state, colorAccessor, groupMetadata, groupKeys, groupLabels };\n    default:\n      throw new Error('Invalid action type in jobStateReducer');\n  }\n};\n\nexport default ({\n  circleStrokeColor,\n  circleStrokeWidth,\n  className,\n  colorPropName = 'color',\n  fontStrokeColor,\n  fontStrokeWidth,\n  groupPropName = 'group_id',\n  labelColorAccessor,\n  labelPropName = 'label',\n  labelFont = 'bold 1.1em Arial',\n  labelFontSecondary = '0.9em Arial',\n  margin = { top: 60, right: 20, bottom: 10, left: 20 },\n  nodesMetadataPromise,\n  pollingInterval = 500,\n  uniqueIdPropName,\n  wrapperStyle = { height: '100%', width: '100%' },\n}) => {\n  const [state, dispatch] = useReducer(jobStateReducer, {\n    colorAccessor: () => ('#fff'),\n    groupMetadata: {},\n    groupKeys: [],\n    groupLabels: [],\n    nodes: [],\n  });\n\n  // fetch initial metadata and state\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        groupMetadataArray,\n        nodes,\n      } = await nodesMetadataPromise();\n\n      dispatch({\n        type: 'SET_GROUP_METADATA',\n        // keyed by groupPropName\n        payload: {\n          colorPropName,\n          groupPropName,\n          groupMetadataArray,\n          labelPropName,\n        },\n      });\n      dispatch({ type: 'SET_NODES', payload: nodes });\n    };\n    fetchData();\n  }, []);\n\n  // poll the \"server\" for new data\n  useInterval(() => {\n    dispatch({\n      type: 'SET_NODES',\n      // TODO: implement real function to poll for data that doesn't require passing in the old nodes\n      payload: getFakeProgress(state.nodes, state.groupKeys, groupPropName),\n    });\n    },\n    pollingInterval);\n\n  return <DotBarChart\n    circleStrokeColor={circleStrokeColor}\n    circleStrokeWidth={circleStrokeWidth}\n    className={className}\n    colorAccessor={state.colorAccessor}\n    fontStrokeColor={fontStrokeColor}\n    fontStrokeWidth={fontStrokeWidth}\n    groupPropName={groupPropName}\n    groupCounts={state.groupKeys.length}\n    groupKeys={state.groupKeys}\n    groupLabels={state.groupLabels}\n    labelColorAccessor={labelColorAccessor}\n    labelFont={labelFont}\n    labelFontSecondary={labelFontSecondary}\n    nodes={state.nodes}\n    margin={margin}\n    uniqueIdPropName\n    wrapperStyle={wrapperStyle}\n  />\n};\n","/** copied from https://overreacted.io/making-setinterval-declarative-with-react-hooks/ */\nimport { useEffect, useRef } from 'react';\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport JobStatus from './containers/JobStatus/JobStatus';\nimport { getDemoMetaDataAndNodes } from './containers/JobStatus/demoDataGenerator';\n\n\nconst JobStatusDemoWithNNodes = ({ match }) => {\n  const nNodes = match.params.nNodes ? Number(match.params.nNodes) : 1000;\n  const groupPropName = 'group_id';\n  /** nodesMetadataPromise should resolve to an object with properties:\n   * {\n   *  groupMetadataArray - array of objects with properties colorPropName, groupPropName, and labelPropName\n   *  nodes - array of objects with colorPropName, groupPropName and (optional) uniqueIdPropName\n   * }\n  */\n  const nodesMetadataPromise = getDemoMetaDataAndNodes.bind(null, { nNodes, groupPropName });\n\n  return <div className=\"App\">\n    <h2 className=\"Job-status-title\">Job Status Monitor for {nNodes} nodes</h2>\n    <div className=\"Job-status-graph-container\">\n      <JobStatus\n        colorPropName=\"color\"\n        className=\"Job-status-graph\"\n        groupPropName={groupPropName}\n        labelFont=\"700 1.1rem Nunito\"\n        labelFontSecondary = \"700 0.9rem Nunito\"\n        labelPropName=\"label\"\n        margin={{ top: 60, right: 20, bottom: 20, left: 20 }}\n        nodesMetadataPromise={nodesMetadataPromise}\n        pollingInterval={500}\n        uniqueIdPropName=\"demoDataGeneratorId\"\n        wrapperStyle={{ height: '80%', width: '80%' }}\n      />\n    </div>\n  </div>;\n};\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n        {[\"/jobstatus/:nNodes\", \"/jobstatus\", \"/:nNodes\", \"\"].map((path, i) => (\n          <Route\n            key={i}\n            exact path={path}\n            component={JobStatusDemoWithNNodes}\n          />\n        ))}\n      </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}